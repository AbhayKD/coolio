name: Release

on:
  push:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build packages
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with: { node-version: 12 }
    - name: Yarn Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: yarn
    - name: Build packages
      run: yarn compile
    - name: Upload built packages
      uses: actions/upload-artifact@v2-preview
      with:
        name: dist
        path: ./packages/{*/dist/,http/request-handlers}
  coverage:
    name: Test Coverage
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with: { node-version: 12 }
    - name: Yarn Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn
    - uses: actions/download-artifact@v2-preview
      with: { name: dist, path: ./packages/ }
    - run: yarn test
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
  github-release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with: { node-version: 12 }
    - name: Yarn Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn
    - uses: actions/download-artifact@v2-preview
      with: { name: dist, path: ./packages/ }
    - name: Checkout Hack (Push Ability)
      run: |
        git config --global user.name "Headline1 Automation"
        git config --global user.email "automation@headline-1.dev"
        git remote set-url origin https://automation:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}
        git remote -v
        git checkout "${GITHUB_REF:11}"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create release
      run: yarn release:version --yes
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  npm-publish:
    runs-on: ubuntu-latest
    needs: github-release
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with: { node-version: 12 }
    - name: Yarn Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn
    - uses: actions/download-artifact@v2-preview
      with: { name: dist, path: ./packages/ }
    - name: Checkout Hack (Attach Head)
      run: git checkout "${GITHUB_REF:11}"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create release & publish package
      run: |
        npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
        ./scripts/retry.sh yarn release:publish --yes --no-verify-access
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
